How did viewing a diff between two versions of a file help you see the bug that was introduced? It made the matter pretty concise and easy to see.
How could having easy access to the entire history of a file make you a more efficient programmer in the long term? It'll help in seeing how the has changed its form over time to get better iterations.
What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google Docs does? Manually choosing when to commit gives you a bit of a freedom that can be useful, although the auto commit feature of google docs is great in its own area. Choosing when to commit can let you control the number of commits you create in comparison to the large number of auto-commits that come with google docs.
Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately? This can be because of the reason that Git allows manual saving while google docs does not. So that said, saving multiple files is useful in case of Git, but not so in case of google docs. Also, when files are linked, then it makes sense to saving multiple files in one commit.
How can you use the commands git log and git diff to view the history of files? git log command will let me see the commits and their details while git diff command will let me see the commits with differences in codes of the files being compared.
How might using version control make you more confident to make changes that could break something? It gives security option in the sense that if one version has a code that can break something, then the previous version may not.
Now that you have your workspace set up, what do you want to try using Git for? For primarily version control.